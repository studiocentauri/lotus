<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.18">
  <compounddef id="CTransform_8h" kind="file" language="C++">
    <compoundname>CTransform.h</compoundname>
    <includes refid="Vector_8h" local="yes">lotus/physics/Vector.h</includes>
    <includes refid="ComponentRegistry_8h" local="yes">lotus/ecs/ComponentRegistry.h</includes>
    <includedby refid="CCamera_8h" local="yes">/builds/centauri/lotus/lotus/include/lotus/ecs/components/CCamera.h</includedby>
    <includedby refid="lotus_8h" local="yes">/builds/centauri/lotus/lotus/include/lotus/lotus.h</includedby>
    <incdepgraph>
      <node id="5">
        <label>lotus/internal/glm/gtx/matrix_decompose.hpp</label>
      </node>
      <node id="20">
        <label>functional</label>
      </node>
      <node id="6">
        <label>lotus/internal/glm/gtc/type_ptr.hpp</label>
      </node>
      <node id="2">
        <label>lotus/physics/Vector.h</label>
        <link refid="Vector_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>lotus/internal/entt/entt.hpp</label>
      </node>
      <node id="16">
        <label>lotus/serialization.h</label>
        <link refid="serialization_8h_source"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>string</label>
      </node>
      <node id="17">
        <label>lotus/internal/entt/entity/fwd.hpp</label>
      </node>
      <node id="10">
        <label>fstream</label>
      </node>
      <node id="3">
        <label>lotus/internal/glm/glm.hpp</label>
      </node>
      <node id="8">
        <label>lotus/lcommon.h</label>
        <link refid="lcommon_8h_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>lotus/internal/glm/gtc/quaternion.hpp</label>
      </node>
      <node id="19">
        <label>unordered_map</label>
      </node>
      <node id="12">
        <label>lotus_export.h</label>
        <link refid="lotus__export_8h_source"/>
      </node>
      <node id="15">
        <label>lotus/ecs/ComponentRegistry.h</label>
        <link refid="ComponentRegistry_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>type_traits</label>
      </node>
      <node id="1">
        <label>/builds/centauri/lotus/lotus/include/lotus/ecs/components/CTransform.h</label>
        <link refid="CTransform_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>memory</label>
      </node>
      <node id="4">
        <label>lotus/internal/glm/gtc/matrix_transform.hpp</label>
      </node>
      <node id="14">
        <label>lotus/internal/nlohmann/json.hpp</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>/builds/centauri/lotus/lotus/include/lotus/lotus.h</label>
        <link refid="lotus_8h_source"/>
      </node>
      <node id="2">
        <label>/builds/centauri/lotus/lotus/include/lotus/ecs/components/CCamera.h</label>
        <link refid="CCamera_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/builds/centauri/lotus/lotus/include/lotus/ecs/components/CTransform.h</label>
        <link refid="CTransform_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structLotus_1_1CTransform" prot="public">Lotus::CTransform</innerclass>
    <innernamespace refid="namespaceLotus">Lotus</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;lotus/physics/Vector.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;lotus/ecs/ComponentRegistry.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Lotus</highlight></codeline>
<codeline lineno="7"><highlight class="normal">{</highlight></codeline>
<codeline lineno="8" refid="structLotus_1_1CTransform" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structLotus_1_1CTransform" kindref="compound">CTransform</ref></highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3f<sp/>Position<sp/>{0.0f,<sp/><sp/>0.0f,<sp/><sp/>0.0f};</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3f<sp/>Rotation<sp/>{0.0f,<sp/>-90.0f,<sp/>0.0f};</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3f<sp/>Scale<sp/><sp/><sp/><sp/>{1.0f,<sp/><sp/>1.0f,<sp/><sp/>1.0f};</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GENERATED_BODY(<ref refid="structLotus_1_1CTransform" kindref="compound">CTransform</ref>,<sp/>Position,<sp/>Rotation,<sp/>Scale);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Vector3f<sp/>GetForwardVector(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structLotus_1_1CTransform" kindref="compound">CTransform</ref>&amp;<sp/>transform)</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3f<sp/>rotation<sp/>=<sp/>transform.Rotation;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>cos(glm::radians(rotation.y))<sp/>*<sp/>cos(glm::radians(rotation.x));</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>sin(glm::radians(rotation.x));</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>z<sp/>=<sp/>sin(glm::radians(rotation.y))<sp/>*<sp/>cos(glm::radians(rotation.x));</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LNormalize(Vector3f(x,<sp/>y,<sp/>z));</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Vector3f<sp/>GetRightVector(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CTransform&amp;<sp/>transform)</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LNormalize(LCross(GetForwardVector(transform),<sp/>UP));</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Vector3f<sp/>GetUpVector(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CTransform&amp;<sp/>transform)</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LNormalize(LCross(GetRightVector(transform),<sp/>GetForwardVector(transform)));</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Matrix4f<sp/>GetModelMatrix(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CTransform&amp;<sp/>transform)</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Matrix4f<sp/>model(1.0f);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model<sp/>=<sp/>LTranslate(model,<sp/>transform.Position);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model<sp/>=<sp/>LRotate(model,<sp/>transform.Rotation.x,<sp/>X_AXIS);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model<sp/>=<sp/>LRotate(model,<sp/>transform.Rotation.y,<sp/>Y_AXIS);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model<sp/>=<sp/>LRotate(model,<sp/>transform.Rotation.z,<sp/>Z_AXIS);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model<sp/>=<sp/>LScale(model,<sp/>transform.Scale);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>model;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/builds/centauri/lotus/lotus/include/lotus/ecs/components/CTransform.h"/>
  </compounddef>
</doxygen>

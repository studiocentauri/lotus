<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.18">
  <compounddef id="namespaceLotus" kind="namespace" language="C++">
    <compoundname>Lotus</compoundname>
    <innerclass refid="structLotus_1_1AssetCache" prot="public">Lotus::AssetCache</innerclass>
    <innerclass refid="structLotus_1_1BeginEvent" prot="public">Lotus::BeginEvent</innerclass>
    <innerclass refid="structLotus_1_1CBoxCollider" prot="public">Lotus::CBoxCollider</innerclass>
    <innerclass refid="structLotus_1_1CCamera" prot="public">Lotus::CCamera</innerclass>
    <innerclass refid="structLotus_1_1CCapsuleCollider" prot="public">Lotus::CCapsuleCollider</innerclass>
    <innerclass refid="structLotus_1_1CLight" prot="public">Lotus::CLight</innerclass>
    <innerclass refid="structLotus_1_1CMeshRenderer" prot="public">Lotus::CMeshRenderer</innerclass>
    <innerclass refid="structLotus_1_1ComponentCreateEvent" prot="public">Lotus::ComponentCreateEvent</innerclass>
    <innerclass refid="structLotus_1_1ComponentRegistry" prot="public">Lotus::ComponentRegistry</innerclass>
    <innerclass refid="classLotus_1_1Config" prot="public">Lotus::Config</innerclass>
    <innerclass refid="structLotus_1_1CPointLight" prot="public">Lotus::CPointLight</innerclass>
    <innerclass refid="structLotus_1_1CRigidBody" prot="public">Lotus::CRigidBody</innerclass>
    <innerclass refid="structLotus_1_1CSkybox" prot="public">Lotus::CSkybox</innerclass>
    <innerclass refid="structLotus_1_1CSphereCollider" prot="public">Lotus::CSphereCollider</innerclass>
    <innerclass refid="structLotus_1_1CSpotlight" prot="public">Lotus::CSpotlight</innerclass>
    <innerclass refid="structLotus_1_1CTransform" prot="public">Lotus::CTransform</innerclass>
    <innerclass refid="structLotus_1_1DestroyEvent" prot="public">Lotus::DestroyEvent</innerclass>
    <innerclass refid="classLotus_1_1Entity" prot="public">Lotus::Entity</innerclass>
    <innerclass refid="structLotus_1_1Event" prot="public">Lotus::Event</innerclass>
    <innerclass refid="classLotus_1_1EventManager" prot="public">Lotus::EventManager</innerclass>
    <innerclass refid="structLotus_1_1HDRI" prot="public">Lotus::HDRI</innerclass>
    <innerclass refid="classLotus_1_1ILifecycle" prot="public">Lotus::ILifecycle</innerclass>
    <innerclass refid="structLotus_1_1InitEvent" prot="public">Lotus::InitEvent</innerclass>
    <innerclass refid="classLotus_1_1ISystem" prot="public">Lotus::ISystem</innerclass>
    <innerclass refid="structLotus_1_1KeyboardEvent" prot="public">Lotus::KeyboardEvent</innerclass>
    <innerclass refid="structLotus_1_1LightInfo" prot="public">Lotus::LightInfo</innerclass>
    <innerclass refid="structLotus_1_1Material" prot="public">Lotus::Material</innerclass>
    <innerclass refid="structLotus_1_1Model" prot="public">Lotus::Model</innerclass>
    <innerclass refid="structLotus_1_1MouseEvent" prot="public">Lotus::MouseEvent</innerclass>
    <innerclass refid="structLotus_1_1PointLightInfo" prot="public">Lotus::PointLightInfo</innerclass>
    <innerclass refid="structLotus_1_1PostUpdateEvent" prot="public">Lotus::PostUpdateEvent</innerclass>
    <innerclass refid="structLotus_1_1PreDestroyEvent" prot="public">Lotus::PreDestroyEvent</innerclass>
    <innerclass refid="structLotus_1_1PreUpdateEvent" prot="public">Lotus::PreUpdateEvent</innerclass>
    <innerclass refid="classLotus_1_1Renderer" prot="public">Lotus::Renderer</innerclass>
    <innerclass refid="structLotus_1_1RendererOp" prot="public">Lotus::RendererOp</innerclass>
    <innerclass refid="structLotus_1_1Scene" prot="public">Lotus::Scene</innerclass>
    <innerclass refid="classLotus_1_1SceneTreeNode" prot="public">Lotus::SceneTreeNode</innerclass>
    <innerclass refid="structLotus_1_1Shader" prot="public">Lotus::Shader</innerclass>
    <innerclass refid="structLotus_1_1ShutdownEvent" prot="public">Lotus::ShutdownEvent</innerclass>
    <innerclass refid="classLotus_1_1Singleton" prot="public">Lotus::Singleton</innerclass>
    <innerclass refid="structLotus_1_1SpotLightInfo" prot="public">Lotus::SpotLightInfo</innerclass>
    <innerclass refid="structLotus_1_1SubMesh" prot="public">Lotus::SubMesh</innerclass>
    <innerclass refid="structLotus_1_1Texture" prot="public">Lotus::Texture</innerclass>
    <innerclass refid="structLotus_1_1UpdateEvent" prot="public">Lotus::UpdateEvent</innerclass>
    <innerclass refid="structLotus_1_1Vertex" prot="public">Lotus::Vertex</innerclass>
    <innerclass refid="structLotus_1_1WindowCloseEvent" prot="public">Lotus::WindowCloseEvent</innerclass>
    <innerclass refid="structLotus_1_1WindowResizeEvent" prot="public">Lotus::WindowResizeEvent</innerclass>
    <innernamespace refid="namespaceLotus_1_1Input">Lotus::Input</innernamespace>
    <innernamespace refid="namespaceLotus_1_1SceneManager">Lotus::SceneManager</innernamespace>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="lcommon_8h_1ae825578a38779239ed42a80e8048dfb3" prot="public" static="no" strong="yes">
        <type></type>
        <name>ERenderAPI</name>
        <enumvalue id="lcommon_8h_1ae825578a38779239ed42a80e8048dfb3ab62148310752abc9080ba48032e5a61d" prot="public">
          <name>OPEN_GL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="lcommon_8h_1ae825578a38779239ed42a80e8048dfb3aeee703cc0a96c14f0661af3ae9420d08" prot="public">
          <name>DIRECTX</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="lcommon_8h_1ae825578a38779239ed42a80e8048dfb3ac60cacb57b9e78f018a9d973bee2f801" prot="public">
          <name>VULKAN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Supported Render APIs. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/builds/centauri/lotus/lotus/include/lotus/lcommon.h" line="42" column="5" bodyfile="/builds/centauri/lotus/lotus/include/lotus/lcommon.h" bodystart="43" bodyend="47"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="ComponentRegistry_8h_1a9a2e21372ab905cb1fd22c7adbb8f822" prot="public" static="no">
        <type>entt::id_type</type>
        <definition>using Lotus::key_t = typedef entt::id_type</definition>
        <argsstring></argsstring>
        <name>key_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/builds/centauri/lotus/lotus/include/lotus/ecs/ComponentRegistry.h" line="51" column="5" bodyfile="/builds/centauri/lotus/lotus/include/lotus/ecs/ComponentRegistry.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="ComponentRegistry_8h_1ae0cfbbc64ac713deb68498a0676ff71b" prot="public" static="no">
        <type>nlohmann::json</type>
        <definition>using Lotus::data_t = typedef nlohmann::json</definition>
        <argsstring></argsstring>
        <name>data_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/builds/centauri/lotus/lotus/include/lotus/ecs/ComponentRegistry.h" line="52" column="5" bodyfile="/builds/centauri/lotus/lotus/include/lotus/ecs/ComponentRegistry.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="ComponentRegistry_8h_1aae7b8099175e67eeb09b8ba9f6cc3a24" prot="public" static="no">
        <type>std::function&lt; void(const entt::entity, entt::registry &amp;, const data_t &amp;data)&gt;</type>
        <definition>using Lotus::ctor_t = typedef std::function&lt;void(const entt::entity, entt::registry&amp;, const data_t&amp; data)&gt;</definition>
        <argsstring></argsstring>
        <name>ctor_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/builds/centauri/lotus/lotus/include/lotus/ecs/ComponentRegistry.h" line="53" column="5" bodyfile="/builds/centauri/lotus/lotus/include/lotus/ecs/ComponentRegistry.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="Entity_8h_1af674a4a55348c0da8fef03f022a6c8e2" prot="public" static="no">
        <type>entt::entity</type>
        <definition>typedef entt::entity Lotus::EntityID</definition>
        <argsstring></argsstring>
        <name>EntityID</name>
        <briefdescription>
<para>An entity handle, essentially just an int. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/builds/centauri/lotus/lotus/include/lotus/ecs/Entity.h" line="11" column="26" bodyfile="/builds/centauri/lotus/lotus/include/lotus/ecs/Entity.h" bodystart="11" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="lcommon_8h_1a6f22aaa2432738d028a1ddf0eba60054" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::unique_ptr&lt; T &gt;</type>
        <definition>using Lotus::URef = typedef std::unique_ptr&lt;T&gt;</definition>
        <argsstring></argsstring>
        <name>URef</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Alias to a unique pointer. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/builds/centauri/lotus/lotus/include/lotus/lcommon.h" line="28" column="5" bodyfile="/builds/centauri/lotus/lotus/include/lotus/lcommon.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="lcommon_8h_1a0ca822b05156da4e9ea13e492f68032e" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::shared_ptr&lt; T &gt;</type>
        <definition>using Lotus::SRef = typedef std::shared_ptr&lt;T&gt;</definition>
        <argsstring></argsstring>
        <name>SRef</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Alias to a shared pointer. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/builds/centauri/lotus/lotus/include/lotus/lcommon.h" line="34" column="5" bodyfile="/builds/centauri/lotus/lotus/include/lotus/lcommon.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="lcommon_8h_1a28ddd2debe7f1c7e5f33e1a637b6b84f" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>entt::resource_handle&lt; T &gt;</type>
        <definition>using Lotus::Handle = typedef entt::resource_handle&lt;T&gt;</definition>
        <argsstring></argsstring>
        <name>Handle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/builds/centauri/lotus/lotus/include/lotus/lcommon.h" line="37" column="5" bodyfile="/builds/centauri/lotus/lotus/include/lotus/lcommon.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="Entity_8h_1a493ac41bab074a98321b2ea1c823702c" prot="public" static="no" constexpr="yes" mutable="no">
        <type>constexpr auto</type>
        <definition>constexpr auto Lotus::NULL_ENTITY</definition>
        <argsstring></argsstring>
        <name>NULL_ENTITY</name>
        <initializer>= entt::null</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/builds/centauri/lotus/lotus/include/lotus/ecs/Entity.h" line="13" column="20" bodyfile="/builds/centauri/lotus/lotus/include/lotus/ecs/Entity.h" bodystart="13" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="CCamera_8h_1a6408c107073b3e735dfe5a29bcd20302" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Lotus::SERIALIZE</definition>
        <argsstring>(CCamera, IsActive, FOV)</argsstring>
        <name>SERIALIZE</name>
        <param>
          <type><ref refid="structLotus_1_1CCamera" kindref="compound">CCamera</ref></type>
        </param>
        <param>
          <type>IsActive</type>
        </param>
        <param>
          <type>FOV</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/builds/centauri/lotus/lotus/include/lotus/ecs/components/CCamera.h" line="15" column="5" declfile="/builds/centauri/lotus/lotus/include/lotus/ecs/components/CCamera.h" declline="15" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="CCamera_8h_1a5039cabb5cb4bb4b9f46fd487dd01de4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Lotus::REGISTER_BODY</definition>
        <argsstring>(CCamera)</argsstring>
        <name>REGISTER_BODY</name>
        <param>
          <type><ref refid="structLotus_1_1CCamera" kindref="compound">CCamera</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/builds/centauri/lotus/lotus/include/lotus/ecs/components/CCamera.h" line="16" column="5" declfile="/builds/centauri/lotus/lotus/include/lotus/ecs/components/CCamera.h" declline="16" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="CCamera_8h_1a65b0262010c6cce509ca6cbf4f1e789e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Matrix4f</type>
        <definition>Matrix4f Lotus::GetViewMatrix</definition>
        <argsstring>(const CTransform &amp;transform)</argsstring>
        <name>GetViewMatrix</name>
        <param>
          <type>const <ref refid="structLotus_1_1CTransform" kindref="compound">CTransform</ref> &amp;</type>
          <declname>transform</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/builds/centauri/lotus/lotus/include/lotus/ecs/components/CCamera.h" line="18" column="21" bodyfile="/builds/centauri/lotus/lotus/include/lotus/ecs/components/CCamera.h" bodystart="18" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="CLight_8h_1aa03fdde68e08ec217b401867373f7434" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Lotus::SERIALIZE</definition>
        <argsstring>(CLight, ambient, diffuse, specular)</argsstring>
        <name>SERIALIZE</name>
        <param>
          <type><ref refid="structLotus_1_1CLight" kindref="compound">CLight</ref></type>
        </param>
        <param>
          <type>ambient</type>
        </param>
        <param>
          <type>diffuse</type>
        </param>
        <param>
          <type>specular</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/builds/centauri/lotus/lotus/include/lotus/ecs/components/CLight.h" line="16" column="5" declfile="/builds/centauri/lotus/lotus/include/lotus/ecs/components/CLight.h" declline="16" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="CLight_8h_1a054c03998210cac816e2672f24a404f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Lotus::REGISTER_BODY</definition>
        <argsstring>(CLight)</argsstring>
        <name>REGISTER_BODY</name>
        <param>
          <type><ref refid="structLotus_1_1CLight" kindref="compound">CLight</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/builds/centauri/lotus/lotus/include/lotus/ecs/components/CLight.h" line="17" column="5" declfile="/builds/centauri/lotus/lotus/include/lotus/ecs/components/CLight.h" declline="17" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="CLight_8h_1abb6e6edf88a33366d2f49332cb0c959c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Lotus::SERIALIZE</definition>
        <argsstring>(CPointLight, ambient, diffuse, specular, constant, linear, quadratic)</argsstring>
        <name>SERIALIZE</name>
        <param>
          <type><ref refid="structLotus_1_1CPointLight" kindref="compound">CPointLight</ref></type>
        </param>
        <param>
          <type>ambient</type>
        </param>
        <param>
          <type>diffuse</type>
        </param>
        <param>
          <type>specular</type>
        </param>
        <param>
          <type>constant</type>
        </param>
        <param>
          <type>linear</type>
        </param>
        <param>
          <type>quadratic</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/builds/centauri/lotus/lotus/include/lotus/ecs/components/CLight.h" line="27" column="5" declfile="/builds/centauri/lotus/lotus/include/lotus/ecs/components/CLight.h" declline="27" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="CLight_8h_1a4f95de78169886d73aa3796d423521ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Lotus::REGISTER_BODY</definition>
        <argsstring>(CPointLight)</argsstring>
        <name>REGISTER_BODY</name>
        <param>
          <type><ref refid="structLotus_1_1CPointLight" kindref="compound">CPointLight</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/builds/centauri/lotus/lotus/include/lotus/ecs/components/CLight.h" line="28" column="5" declfile="/builds/centauri/lotus/lotus/include/lotus/ecs/components/CLight.h" declline="28" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="CLight_8h_1a6a0defd9025278ffbfd56426edac63a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Lotus::SERIALIZE</definition>
        <argsstring>(CSpotlight, ambient, diffuse, specular, constant, linear, quadratic, innerCutOff, outerCutOff)</argsstring>
        <name>SERIALIZE</name>
        <param>
          <type><ref refid="structLotus_1_1CSpotlight" kindref="compound">CSpotlight</ref></type>
        </param>
        <param>
          <type>ambient</type>
        </param>
        <param>
          <type>diffuse</type>
        </param>
        <param>
          <type>specular</type>
        </param>
        <param>
          <type>constant</type>
        </param>
        <param>
          <type>linear</type>
        </param>
        <param>
          <type>quadratic</type>
        </param>
        <param>
          <type>innerCutOff</type>
        </param>
        <param>
          <type>outerCutOff</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/builds/centauri/lotus/lotus/include/lotus/ecs/components/CLight.h" line="41" column="5" declfile="/builds/centauri/lotus/lotus/include/lotus/ecs/components/CLight.h" declline="41" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="CLight_8h_1a97b3ddce1a91e489924da0a12c0b7c26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Lotus::REGISTER_BODY</definition>
        <argsstring>(CSpotlight)</argsstring>
        <name>REGISTER_BODY</name>
        <param>
          <type><ref refid="structLotus_1_1CSpotlight" kindref="compound">CSpotlight</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/builds/centauri/lotus/lotus/include/lotus/ecs/components/CLight.h" line="42" column="5" declfile="/builds/centauri/lotus/lotus/include/lotus/ecs/components/CLight.h" declline="42" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="CTransform_8h_1adc914ee19bd934743d398e7f73d12e4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Lotus::SERIALIZE</definition>
        <argsstring>(CTransform, Position, Rotation, Scale)</argsstring>
        <name>SERIALIZE</name>
        <param>
          <type><ref refid="structLotus_1_1CTransform" kindref="compound">CTransform</ref></type>
        </param>
        <param>
          <type>Position</type>
        </param>
        <param>
          <type>Rotation</type>
        </param>
        <param>
          <type>Scale</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/builds/centauri/lotus/lotus/include/lotus/ecs/components/CTransform.h" line="16" column="5" declfile="/builds/centauri/lotus/lotus/include/lotus/ecs/components/CTransform.h" declline="16" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="CTransform_8h_1a0f906b24f4cab31910cf2fa47fff3f55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Lotus::REGISTER_BODY</definition>
        <argsstring>(CTransform)</argsstring>
        <name>REGISTER_BODY</name>
        <param>
          <type><ref refid="structLotus_1_1CTransform" kindref="compound">CTransform</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/builds/centauri/lotus/lotus/include/lotus/ecs/components/CTransform.h" line="17" column="5" declfile="/builds/centauri/lotus/lotus/include/lotus/ecs/components/CTransform.h" declline="17" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="CTransform_8h_1ada809878939f381775227b977dc1a54c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Vector3f</type>
        <definition>Vector3f Lotus::GetForwardVector</definition>
        <argsstring>(const CTransform &amp;transform)</argsstring>
        <name>GetForwardVector</name>
        <param>
          <type>const <ref refid="structLotus_1_1CTransform" kindref="compound">CTransform</ref> &amp;</type>
          <declname>transform</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/builds/centauri/lotus/lotus/include/lotus/ecs/components/CTransform.h" line="19" column="21" bodyfile="/builds/centauri/lotus/lotus/include/lotus/ecs/components/CTransform.h" bodystart="19" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="CTransform_8h_1a35a04b715a08991168cc31988864cf00" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Vector3f</type>
        <definition>Vector3f Lotus::GetRightVector</definition>
        <argsstring>(const CTransform &amp;transform)</argsstring>
        <name>GetRightVector</name>
        <param>
          <type>const <ref refid="structLotus_1_1CTransform" kindref="compound">CTransform</ref> &amp;</type>
          <declname>transform</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/builds/centauri/lotus/lotus/include/lotus/ecs/components/CTransform.h" line="28" column="21" bodyfile="/builds/centauri/lotus/lotus/include/lotus/ecs/components/CTransform.h" bodystart="28" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="CTransform_8h_1add79c43acb117e49e987f5442850e9a0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Vector3f</type>
        <definition>Vector3f Lotus::GetUpVector</definition>
        <argsstring>(const CTransform &amp;transform)</argsstring>
        <name>GetUpVector</name>
        <param>
          <type>const <ref refid="structLotus_1_1CTransform" kindref="compound">CTransform</ref> &amp;</type>
          <declname>transform</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/builds/centauri/lotus/lotus/include/lotus/ecs/components/CTransform.h" line="33" column="21" bodyfile="/builds/centauri/lotus/lotus/include/lotus/ecs/components/CTransform.h" bodystart="33" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="Entity_8h_1aabe0c16a083cafda79d9c244d057c122" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Lotus::ECSInitialize</definition>
        <argsstring>()</argsstring>
        <name>ECSInitialize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/builds/centauri/lotus/lotus/include/lotus/ecs/Entity.h" line="81" column="10" declfile="/builds/centauri/lotus/lotus/include/lotus/ecs/Entity.h" declline="81" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="Entity_8h_1ac5bcfd24bd3cb661b7b53050f822db5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Lotus::ECSShutdown</definition>
        <argsstring>()</argsstring>
        <name>ECSShutdown</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/builds/centauri/lotus/lotus/include/lotus/ecs/Entity.h" line="82" column="10" declfile="/builds/centauri/lotus/lotus/include/lotus/ecs/Entity.h" declline="82" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="Entity_8h_1a87991e17ac23c76e0864d643b64568ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LOTUS_API entt::registry *</type>
        <definition>LOTUS_API entt::registry* Lotus::GetRegistry</definition>
        <argsstring>()</argsstring>
        <name>GetRegistry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/builds/centauri/lotus/lotus/include/lotus/ecs/Entity.h" line="84" column="30" declfile="/builds/centauri/lotus/lotus/include/lotus/ecs/Entity.h" declline="84" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="Entity_8h_1ad0d15c921ed8f52868575a2b668fa491" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LOTUS_API <ref refid="classLotus_1_1Entity" kindref="compound">Entity</ref></type>
        <definition>LOTUS_API Entity Lotus::CreateEntity</definition>
        <argsstring>()</argsstring>
        <name>CreateEntity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/builds/centauri/lotus/lotus/include/lotus/ecs/Entity.h" line="85" column="22" declfile="/builds/centauri/lotus/lotus/include/lotus/ecs/Entity.h" declline="85" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="Entity_8h_1a31deb648a083999530f8978351b512e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LOTUS_API <ref refid="classLotus_1_1Entity" kindref="compound">Entity</ref></type>
        <definition>LOTUS_API Entity Lotus::CreateEntity</definition>
        <argsstring>(const std::string &amp;path)</argsstring>
        <name>CreateEntity</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/builds/centauri/lotus/lotus/include/lotus/ecs/Entity.h" line="86" column="22" declfile="/builds/centauri/lotus/lotus/include/lotus/ecs/Entity.h" declline="86" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="Event_8h_1a027067e953b657dc705d2882f94d1322" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>LOTUS_API EEventCategory</type>
        <definition>LOTUS_API EEventCategory Lotus::operator|</definition>
        <argsstring>(EEventCategory A, EEventCategory B)</argsstring>
        <name>operator|</name>
        <param>
          <type>EEventCategory</type>
          <declname>A</declname>
        </param>
        <param>
          <type>EEventCategory</type>
          <declname>B</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/builds/centauri/lotus/lotus/include/lotus/ecs/Event.h" line="42" column="37" bodyfile="/builds/centauri/lotus/lotus/include/lotus/ecs/Event.h" bodystart="42" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="Event_8h_1a75dfbd9f988cb79d117e09ff6c6f0f32" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>LOTUS_API EEventCategory</type>
        <definition>LOTUS_API EEventCategory Lotus::operator&amp;</definition>
        <argsstring>(EEventCategory A, EEventCategory B)</argsstring>
        <name>operator&amp;</name>
        <param>
          <type>EEventCategory</type>
          <declname>A</declname>
        </param>
        <param>
          <type>EEventCategory</type>
          <declname>B</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/builds/centauri/lotus/lotus/include/lotus/ecs/Event.h" line="47" column="37" bodyfile="/builds/centauri/lotus/lotus/include/lotus/ecs/Event.h" bodystart="47" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="entry_8h_1abca73e006590bd784520a220d58b4899" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LOTUS_API void</type>
        <definition>LOTUS_API void Lotus::Initialize</definition>
        <argsstring>(const Config &amp;config)</argsstring>
        <name>Initialize</name>
        <param>
          <type>const <ref refid="classLotus_1_1Config" kindref="compound">Config</ref> &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/builds/centauri/lotus/lotus/include/lotus/entry.h" line="7" column="20" declfile="/builds/centauri/lotus/lotus/include/lotus/entry.h" declline="7" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="entry_8h_1a08ce3891cf754eac6006ee1f846ab7d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LOTUS_API void</type>
        <definition>LOTUS_API void Lotus::Run</definition>
        <argsstring>()</argsstring>
        <name>Run</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/builds/centauri/lotus/lotus/include/lotus/entry.h" line="8" column="20" declfile="/builds/centauri/lotus/lotus/include/lotus/entry.h" declline="8" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="filesystem_8h_1a3f47890e0003e7cc1c60355109ba7c4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LOTUS_API std::string</type>
        <definition>LOTUS_API std::string Lotus::GetProjectResourceRoot</definition>
        <argsstring>()</argsstring>
        <name>GetProjectResourceRoot</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/builds/centauri/lotus/lotus/include/lotus/filesystem.h" line="8" column="27" declfile="/builds/centauri/lotus/lotus/include/lotus/filesystem.h" declline="8" declcolumn="27"/>
      </memberdef>
      <memberdef kind="function" id="filesystem_8h_1aaf4ffd6f17b3c29da5966217c80ecced" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LOTUS_API std::string</type>
        <definition>LOTUS_API std::string Lotus::GetEngineResourceRoot</definition>
        <argsstring>()</argsstring>
        <name>GetEngineResourceRoot</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/builds/centauri/lotus/lotus/include/lotus/filesystem.h" line="9" column="27" declfile="/builds/centauri/lotus/lotus/include/lotus/filesystem.h" declline="9" declcolumn="27"/>
      </memberdef>
      <memberdef kind="function" id="filesystem_8h_1ab6f73523d2dba30c153800fe538e6a1e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LOTUS_API void</type>
        <definition>LOTUS_API void Lotus::SetProjectResourceRoot</definition>
        <argsstring>(const std::string &amp;path)</argsstring>
        <name>SetProjectResourceRoot</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/builds/centauri/lotus/lotus/include/lotus/filesystem.h" line="10" column="20" declfile="/builds/centauri/lotus/lotus/include/lotus/filesystem.h" declline="10" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="filesystem_8h_1a6e43518c23bc84d989e24e12b025caab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LOTUS_API std::string</type>
        <definition>LOTUS_API std::string Lotus::ExpandPath</definition>
        <argsstring>(const std::string &amp;path)</argsstring>
        <name>ExpandPath</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/builds/centauri/lotus/lotus/include/lotus/filesystem.h" line="11" column="27" declfile="/builds/centauri/lotus/lotus/include/lotus/filesystem.h" declline="11" declcolumn="27"/>
      </memberdef>
      <memberdef kind="function" id="components_8h_1ace7b62a8c6b62c0ba77084678a3a1c5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Lotus::SERIALIZE</definition>
        <argsstring>(CSphereCollider, Position, Radius)</argsstring>
        <name>SERIALIZE</name>
        <param>
          <type><ref refid="structLotus_1_1CSphereCollider" kindref="compound">CSphereCollider</ref></type>
        </param>
        <param>
          <type>Position</type>
        </param>
        <param>
          <type>Radius</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/builds/centauri/lotus/lotus/include/lotus/physics/components.h" line="18" column="5" declfile="/builds/centauri/lotus/lotus/include/lotus/physics/components.h" declline="18" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="components_8h_1a5a23f2c7a8486c2c2a59231236430dc4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Lotus::REGISTER_BODY</definition>
        <argsstring>(CSphereCollider)</argsstring>
        <name>REGISTER_BODY</name>
        <param>
          <type><ref refid="structLotus_1_1CSphereCollider" kindref="compound">CSphereCollider</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/builds/centauri/lotus/lotus/include/lotus/physics/components.h" line="19" column="5" declfile="/builds/centauri/lotus/lotus/include/lotus/physics/components.h" declline="19" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="components_8h_1a6f06f62eeedb6d46366f61b1bdc55651" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Lotus::SERIALIZE</definition>
        <argsstring>(CBoxCollider, Position, Dimensions)</argsstring>
        <name>SERIALIZE</name>
        <param>
          <type><ref refid="structLotus_1_1CBoxCollider" kindref="compound">CBoxCollider</ref></type>
        </param>
        <param>
          <type>Position</type>
        </param>
        <param>
          <type>Dimensions</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/builds/centauri/lotus/lotus/include/lotus/physics/components.h" line="31" column="5" declfile="/builds/centauri/lotus/lotus/include/lotus/physics/components.h" declline="31" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="components_8h_1aa02d23ec7c58225495eceef07235fa60" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Lotus::REGISTER_BODY</definition>
        <argsstring>(CBoxCollider)</argsstring>
        <name>REGISTER_BODY</name>
        <param>
          <type><ref refid="structLotus_1_1CBoxCollider" kindref="compound">CBoxCollider</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/builds/centauri/lotus/lotus/include/lotus/physics/components.h" line="32" column="5" declfile="/builds/centauri/lotus/lotus/include/lotus/physics/components.h" declline="32" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="components_8h_1a178907e348c0d7ae6ccb2c8229fa5f80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Lotus::SERIALIZE</definition>
        <argsstring>(CCapsuleCollider, Position, Radius, Height)</argsstring>
        <name>SERIALIZE</name>
        <param>
          <type><ref refid="structLotus_1_1CCapsuleCollider" kindref="compound">CCapsuleCollider</ref></type>
        </param>
        <param>
          <type>Position</type>
        </param>
        <param>
          <type>Radius</type>
        </param>
        <param>
          <type>Height</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/builds/centauri/lotus/lotus/include/lotus/physics/components.h" line="47" column="5" declfile="/builds/centauri/lotus/lotus/include/lotus/physics/components.h" declline="47" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="components_8h_1ae94aee9129ff919524a59982ca8e3ea1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Lotus::REGISTER_BODY</definition>
        <argsstring>(CCapsuleCollider)</argsstring>
        <name>REGISTER_BODY</name>
        <param>
          <type><ref refid="structLotus_1_1CCapsuleCollider" kindref="compound">CCapsuleCollider</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/builds/centauri/lotus/lotus/include/lotus/physics/components.h" line="48" column="5" declfile="/builds/centauri/lotus/lotus/include/lotus/physics/components.h" declline="48" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="components_8h_1a74c69bc8e15a4108b9e5224c8e714c4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Lotus::SERIALIZE</definition>
        <argsstring>(CRigidBody, Gravity, IsKinematic)</argsstring>
        <name>SERIALIZE</name>
        <param>
          <type><ref refid="structLotus_1_1CRigidBody" kindref="compound">CRigidBody</ref></type>
        </param>
        <param>
          <type>Gravity</type>
        </param>
        <param>
          <type>IsKinematic</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/builds/centauri/lotus/lotus/include/lotus/physics/components.h" line="58" column="5" declfile="/builds/centauri/lotus/lotus/include/lotus/physics/components.h" declline="58" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="components_8h_1ad5b772e36df15b31ab88d624f5220cbb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Lotus::REGISTER_BODY</definition>
        <argsstring>(CRigidBody)</argsstring>
        <name>REGISTER_BODY</name>
        <param>
          <type><ref refid="structLotus_1_1CRigidBody" kindref="compound">CRigidBody</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/builds/centauri/lotus/lotus/include/lotus/physics/components.h" line="59" column="5" declfile="/builds/centauri/lotus/lotus/include/lotus/physics/components.h" declline="59" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="physics_8h_1a7b60e19a35f865bc192e239b4c579a73" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Vector3f</type>
        <definition>Vector3f Lotus::LNormalize</definition>
        <argsstring>(const Vector3f &amp;vec)</argsstring>
        <name>LNormalize</name>
        <param>
          <type>const Vector3f &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a unit vector in the direction of the passed vector. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vec</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector to be normalized </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Unit vector </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/builds/centauri/lotus/lotus/include/lotus/physics/physics.h" line="75" column="21" bodyfile="/builds/centauri/lotus/lotus/include/lotus/physics/physics.h" bodystart="75" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="physics_8h_1a726f9b8e02e75b52c1f7df5480868381" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Vector3f</type>
        <definition>Vector3f Lotus::LCross</definition>
        <argsstring>(const Vector3f &amp;a, const Vector3f &amp;b)</argsstring>
        <name>LCross</name>
        <param>
          <type>const Vector3f &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const Vector3f &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Calculate the cross product of two vectors. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>First vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>Second vector </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Result of the cross product </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/builds/centauri/lotus/lotus/include/lotus/physics/physics.h" line="86" column="21" bodyfile="/builds/centauri/lotus/lotus/include/lotus/physics/physics.h" bodystart="86" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="physics_8h_1a893de9d4908114267fdfb6b93352a369" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Matrix4f</type>
        <definition>Matrix4f Lotus::LLookAt</definition>
        <argsstring>(const Vector3f &amp;eye, const Vector3f &amp;center, const Vector3f &amp;up)</argsstring>
        <name>LLookAt</name>
        <param>
          <type>const Vector3f &amp;</type>
          <declname>eye</declname>
        </param>
        <param>
          <type>const Vector3f &amp;</type>
          <declname>center</declname>
        </param>
        <param>
          <type>const Vector3f &amp;</type>
          <declname>up</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Calculate a transformation matrix to that will make an object look towards a particular point. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eye</parametername>
</parameternamelist>
<parameterdescription>
<para>Position of the &quot;eye&quot; of the object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>center</parametername>
</parameternamelist>
<parameterdescription>
<para>Point to look at </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>up</parametername>
</parameternamelist>
<parameterdescription>
<para>Direction representing &quot;up&quot; for the object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Transformation matrix </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/builds/centauri/lotus/lotus/include/lotus/physics/physics.h" line="98" column="21" bodyfile="/builds/centauri/lotus/lotus/include/lotus/physics/physics.h" bodystart="98" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="physics_8h_1a6b8ce6b82e47ad6e7d1368b2b414eccb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Matrix4f</type>
        <definition>Matrix4f Lotus::LPerspective</definition>
        <argsstring>(float fov, float aspectRatio, float zNear, float zFar)</argsstring>
        <name>LPerspective</name>
        <param>
          <type>float</type>
          <declname>fov</declname>
        </param>
        <param>
          <type>float</type>
          <declname>aspectRatio</declname>
        </param>
        <param>
          <type>float</type>
          <declname>zNear</declname>
        </param>
        <param>
          <type>float</type>
          <declname>zFar</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Calculate a transformation matrix to bring the object into clip space with a perspective projection. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fov</parametername>
</parameternamelist>
<parameterdescription>
<para>Half-angle field of view in degrees </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aspectRatio</parametername>
</parameternamelist>
<parameterdescription>
<para>Aspect ratio of the projection </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>zNear</parametername>
</parameternamelist>
<parameterdescription>
<para>Frustum near cut-off </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>zFar</parametername>
</parameternamelist>
<parameterdescription>
<para>Frustum far cut-off </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Transformation matrix </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/builds/centauri/lotus/lotus/include/lotus/physics/physics.h" line="111" column="21" bodyfile="/builds/centauri/lotus/lotus/include/lotus/physics/physics.h" bodystart="111" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="physics_8h_1a7121c0742be7d02d3edeb1c095879776" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Matrix4f</type>
        <definition>Matrix4f Lotus::LTranslate</definition>
        <argsstring>(const Matrix4f &amp;mat, const Vector3f &amp;translationVec)</argsstring>
        <name>LTranslate</name>
        <param>
          <type>const Matrix4f &amp;</type>
          <declname>mat</declname>
        </param>
        <param>
          <type>const Vector3f &amp;</type>
          <declname>translationVec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add a translation to a transformation matrix. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mat</parametername>
</parameternamelist>
<parameterdescription>
<para>Matrix to translate </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>translationVec</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector to translate along. Magnitude represents distance. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Updated transformation matrix </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/builds/centauri/lotus/lotus/include/lotus/physics/physics.h" line="122" column="21" bodyfile="/builds/centauri/lotus/lotus/include/lotus/physics/physics.h" bodystart="122" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="physics_8h_1ac760cc5e35d95f3e943583f3d17bce53" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Matrix4f</type>
        <definition>Matrix4f Lotus::LScale</definition>
        <argsstring>(const Matrix4f &amp;mat, const Vector3f &amp;scaleVec)</argsstring>
        <name>LScale</name>
        <param>
          <type>const Matrix4f &amp;</type>
          <declname>mat</declname>
        </param>
        <param>
          <type>const Vector3f &amp;</type>
          <declname>scaleVec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add a scale to a transformation matrix <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mat</parametername>
</parameternamelist>
<parameterdescription>
<para>Matrix to scale </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>scaleVec</parametername>
</parameternamelist>
<parameterdescription>
<para>Scale along X, Y and Z </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Updated transformation matrix </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/builds/centauri/lotus/lotus/include/lotus/physics/physics.h" line="133" column="21" bodyfile="/builds/centauri/lotus/lotus/include/lotus/physics/physics.h" bodystart="133" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="physics_8h_1a2d8bf4ad45a5ac17b5f8188ad4b9f3af" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Matrix4f</type>
        <definition>Matrix4f Lotus::LRotate</definition>
        <argsstring>(Matrix4f mat, float deg, Vector3f axis)</argsstring>
        <name>LRotate</name>
        <param>
          <type>Matrix4f</type>
          <declname>mat</declname>
        </param>
        <param>
          <type>float</type>
          <declname>deg</declname>
        </param>
        <param>
          <type>Vector3f</type>
          <declname>axis</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add a rotation to a transformation matrix <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mat</parametername>
</parameternamelist>
<parameterdescription>
<para>Matrix to rotate </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>deg</parametername>
</parameternamelist>
<parameterdescription>
<para>Angle to rotate in degrees </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>axis</parametername>
</parameternamelist>
<parameterdescription>
<para>Axis to rotate along </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Updated transformation matrix </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/builds/centauri/lotus/lotus/include/lotus/physics/physics.h" line="145" column="21" bodyfile="/builds/centauri/lotus/lotus/include/lotus/physics/physics.h" bodystart="145" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="physics_8h_1a14c15fa7611b1fff9231f9ecee70e5f7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const float *</type>
        <definition>const float* Lotus::valuePtr</definition>
        <argsstring>(const Matrix4f &amp;mat)</argsstring>
        <name>valuePtr</name>
        <param>
          <type>const Matrix4f &amp;</type>
          <declname>mat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a pointer to the matrix data. Required because of GLM internals. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mat</parametername>
</parameternamelist>
<parameterdescription>
<para>Matrix to get the pointer to </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Float pointer to the matrix data </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/builds/centauri/lotus/lotus/include/lotus/physics/physics.h" line="155" column="24" bodyfile="/builds/centauri/lotus/lotus/include/lotus/physics/physics.h" bodystart="155" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="physics_8h_1a0aee522b724c634c46d97e2e2ad030f5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const float *</type>
        <definition>const float* Lotus::valuePtr</definition>
        <argsstring>(const Vector3f &amp;vec)</argsstring>
        <name>valuePtr</name>
        <param>
          <type>const Vector3f &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a pointer to the vector data. Required because of GLM internals. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vec</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector to get the pointer to </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Float pointer to the vector data </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/builds/centauri/lotus/lotus/include/lotus/physics/physics.h" line="164" column="24" bodyfile="/builds/centauri/lotus/lotus/include/lotus/physics/physics.h" bodystart="164" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="Renderer_8h_1ac6abc462d0a09f476896cf45aac50bde" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Lotus::to_json</definition>
        <argsstring>(nlohmann::json &amp;data, const CMeshRenderer &amp;mr)</argsstring>
        <name>to_json</name>
        <param>
          <type>nlohmann::json &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const <ref refid="structLotus_1_1CMeshRenderer" kindref="compound">CMeshRenderer</ref> &amp;</type>
          <declname>mr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/builds/centauri/lotus/lotus/include/lotus/Renderer.h" line="46" column="17" bodyfile="/builds/centauri/lotus/lotus/include/lotus/Renderer.h" bodystart="46" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="Renderer_8h_1a9202fa7f1470d401d44312c40570e4ca" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Lotus::from_json</definition>
        <argsstring>(const nlohmann::json &amp;data, CMeshRenderer &amp;mr)</argsstring>
        <name>from_json</name>
        <param>
          <type>const nlohmann::json &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="structLotus_1_1CMeshRenderer" kindref="compound">CMeshRenderer</ref> &amp;</type>
          <declname>mr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/builds/centauri/lotus/lotus/include/lotus/Renderer.h" line="51" column="17" bodyfile="/builds/centauri/lotus/lotus/include/lotus/Renderer.h" bodystart="51" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="Renderer_8h_1aade89488f1d97624467e774aeb15cba7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Lotus::REGISTER_BODY</definition>
        <argsstring>(CMeshRenderer)</argsstring>
        <name>REGISTER_BODY</name>
        <param>
          <type><ref refid="structLotus_1_1CMeshRenderer" kindref="compound">CMeshRenderer</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/builds/centauri/lotus/lotus/include/lotus/Renderer.h" line="60" column="5" declfile="/builds/centauri/lotus/lotus/include/lotus/Renderer.h" declline="60" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="AssetRegistry_8h_1a198b20be7046670d3dcff7064bc7a4c0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Resource</type>
          </param>
          <param>
            <type>typename Loader</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>Handle&lt; Resource &gt;</type>
        <definition>Handle&lt;Resource&gt; Lotus::LoadAsset</definition>
        <argsstring>(const std::string &amp;path, Args &amp;&amp;...args)</argsstring>
        <name>LoadAsset</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>path</declname>
        </param>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/builds/centauri/lotus/lotus/include/lotus/resources/AssetRegistry.h" line="12" column="19" bodyfile="/builds/centauri/lotus/lotus/include/lotus/resources/AssetRegistry.h" bodystart="12" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="HDRI_8h_1a917742a76b28bdefa6a9d0a3e0041707" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Lotus::LOADER</definition>
        <argsstring>(HDRI)</argsstring>
        <name>LOADER</name>
        <param>
          <type><ref refid="structLotus_1_1HDRI" kindref="compound">HDRI</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/builds/centauri/lotus/lotus/include/lotus/resources/HDRI.h" line="17" column="5" bodyfile="/builds/centauri/lotus/lotus/include/lotus/resources/HDRI.h" bodystart="17" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="HDRI_8h_1add6d51f6e673f6580b721f8f8b1607c3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Lotus::to_json</definition>
        <argsstring>(nlohmann::json &amp;data, const CSkybox &amp;sb)</argsstring>
        <name>to_json</name>
        <param>
          <type>nlohmann::json &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const <ref refid="structLotus_1_1CSkybox" kindref="compound">CSkybox</ref> &amp;</type>
          <declname>sb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/builds/centauri/lotus/lotus/include/lotus/resources/HDRI.h" line="29" column="17" bodyfile="/builds/centauri/lotus/lotus/include/lotus/resources/HDRI.h" bodystart="29" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="HDRI_8h_1a5cb36c93e35e551cb03619fb43a94735" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Lotus::from_json</definition>
        <argsstring>(const nlohmann::json &amp;data, CSkybox &amp;sb)</argsstring>
        <name>from_json</name>
        <param>
          <type>const nlohmann::json &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="structLotus_1_1CSkybox" kindref="compound">CSkybox</ref> &amp;</type>
          <declname>sb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/builds/centauri/lotus/lotus/include/lotus/resources/HDRI.h" line="34" column="17" bodyfile="/builds/centauri/lotus/lotus/include/lotus/resources/HDRI.h" bodystart="34" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="HDRI_8h_1a0e179dd84fab9be10a3522d690e3a461" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Lotus::REGISTER_BODY</definition>
        <argsstring>(CSkybox)</argsstring>
        <name>REGISTER_BODY</name>
        <param>
          <type><ref refid="structLotus_1_1CSkybox" kindref="compound">CSkybox</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/builds/centauri/lotus/lotus/include/lotus/resources/HDRI.h" line="39" column="5" declfile="/builds/centauri/lotus/lotus/include/lotus/resources/HDRI.h" declline="39" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="Material_8h_1a33a48af55ceeac79cae0f2f3db59a918" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Lotus::LOADER</definition>
        <argsstring>(Material)</argsstring>
        <name>LOADER</name>
        <param>
          <type><ref refid="structLotus_1_1Material" kindref="compound">Material</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/builds/centauri/lotus/lotus/include/lotus/resources/Material.h" line="21" column="5" bodyfile="/builds/centauri/lotus/lotus/include/lotus/resources/Material.h" bodystart="21" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="Model_8h_1a5db7750526a824d731764815e5988276" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Lotus::LOADER</definition>
        <argsstring>(Model)</argsstring>
        <name>LOADER</name>
        <param>
          <type><ref refid="structLotus_1_1Model" kindref="compound">Model</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/builds/centauri/lotus/lotus/include/lotus/resources/Model.h" line="34" column="5" bodyfile="/builds/centauri/lotus/lotus/include/lotus/resources/Model.h" bodystart="34" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="Shader_8h_1a653aa6d797db88917a5fd4e41bffddee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Lotus::LOADER</definition>
        <argsstring>(Shader)</argsstring>
        <name>LOADER</name>
        <param>
          <type><ref refid="structLotus_1_1Shader" kindref="compound">Shader</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/builds/centauri/lotus/lotus/include/lotus/resources/Shader.h" line="84" column="5" bodyfile="/builds/centauri/lotus/lotus/include/lotus/resources/Shader.h" bodystart="84" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="Shader_8h_1a2af0111de60ea6e7f1f4a6c0d45311f1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Handle&lt; <ref refid="structLotus_1_1Shader" kindref="compound">Shader</ref> &gt;</type>
        <definition>Handle&lt;Shader&gt; Lotus::LoadAsset&lt; Shader, ShaderLoader &gt;</definition>
        <argsstring>(const std::string &amp;path, const std::string &amp;args)</argsstring>
        <name>LoadAsset&lt; Shader, ShaderLoader &gt;</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/builds/centauri/lotus/lotus/include/lotus/resources/Shader.h" line="84" column="5" bodyfile="/builds/centauri/lotus/lotus/include/lotus/resources/Shader.h" bodystart="90" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="Texture_8h_1a54c0c2d80676f9a85a61eea11acd65f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Lotus::LOADER</definition>
        <argsstring>(Texture)</argsstring>
        <name>LOADER</name>
        <param>
          <type><ref refid="structLotus_1_1Texture" kindref="compound">Texture</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/builds/centauri/lotus/lotus/include/lotus/resources/Texture.h" line="13" column="5" bodyfile="/builds/centauri/lotus/lotus/include/lotus/resources/Texture.h" bodystart="13" bodyend="16"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/builds/centauri/lotus/lotus/include/lotus/Config.h" line="5" column="1"/>
  </compounddef>
</doxygen>


.. _program_listing_file_include_lotus_lcommon.h:

Program Listing for File lcommon.h
==================================

|exhale_lsh| :ref:`Return to documentation for file <file_include_lotus_lcommon.h>` (``include\lotus\lcommon.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   
   #pragma once
   
   #include <memory>
   #include <fstream>
   #include <type_traits>
   
   #include "lotus_export.h"
   #include "lotus/internal/entt/entt.hpp"
   #include "lotus/internal/nlohmann/json.hpp"
   
   
   // TODO: Convenient, but not very readable I guess.
   #define LOADER(x, y) struct LOTUS_API x final: entt::resource_loader<x, y>
   #define GET(x) x::Get()
   
   namespace Lotus
   {
       template<typename T>
       using URef = std::unique_ptr<T>;
   
       template<typename T>
       using SRef = std::shared_ptr<T>;
   
       template<typename T>
       using Handle = entt::resource_handle<T>;
   
       enum class ERenderAPI
       {
           OPEN_GL,
           DIRECTX,
           VULKAN
       };
   
       template<typename T>
       class LOTUS_API Singleton
       {
       public:
           Singleton(const Singleton&) = delete;
   
           Singleton& operator=(const Singleton&) = delete;
   
           static T& Get()
           {
               static T instance;
               return instance;
           }
   
       protected:
           Singleton() noexcept = default;
   
           virtual ~Singleton() = default;
       };
   }

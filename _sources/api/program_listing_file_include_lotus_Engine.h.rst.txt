
.. _program_listing_file_include_lotus_Engine.h:

Program Listing for File Engine.h
=================================

|exhale_lsh| :ref:`Return to documentation for file <file_include_lotus_Engine.h>` (``include\lotus\Engine.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   #pragma once
   
   #include "lcommon.h"
   #include "Renderer.h"
   #include "events/EventManager.h"
   #include "events/Input.h"
   
   namespace Lotus
   {
       class LOTUS_API Engine : public Singleton<Engine>
       {
           bool _isRunning = true;
   
           // NOTE: While this is a unique pointer owned by the engine, the underlying object can be modified
           // by the lifecycle events called on it.
           URef<IWindow> _window;
   
           EventManager* _eventManager{};
           Input* _inputManager{};
           Renderer* _renderer{};
   
       public:
           void Initialize();
   
           void Run();
   
           void Shutdown();
   
       private:
           friend Singleton<Engine>;
   
           Engine() = default;
   
           void tick(float delta);
   
           // This guy needs to be a reference so that a single callback can be used for all window events
           // This function should then typecast into an appropriate type before ending the thing to the Event Manager.
           static void OnEvent(Event& event);
       };
   }

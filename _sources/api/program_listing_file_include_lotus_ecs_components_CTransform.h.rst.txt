
.. _program_listing_file_include_lotus_ecs_components_CTransform.h:

Program Listing for File CTransform.h
=====================================

|exhale_lsh| :ref:`Return to documentation for file <file_include_lotus_ecs_components_CTransform.h>` (``include\lotus\ecs\components\CTransform.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   #pragma once
   
   #include "lotus/physics/physics.h"
   
   namespace Lotus
   {
       struct CTransform
       {
           Vector3f Position {0.0f,  0.0f,  0.0f};
           Vector3f Rotation {0.0f, -90.0f, 0.0f};
           Vector3f Scale    {1.0f,  1.0f,  1.0f};
       };
   
       inline Vector3f GetForwardVector(const CTransform& transform)
       {
           Vector3f rotation = transform.Rotation;
           float x = cos(glm::radians(rotation.y)) * cos(glm::radians(rotation.x));
           float y = sin(glm::radians(rotation.x));
           float z = sin(glm::radians(rotation.y)) * cos(glm::radians(rotation.x));
           return LNormalize(Vector3f(x, y, z));
       }
   
       inline Vector3f GetRightVector(const CTransform& transform)
       {
           return LNormalize(LCross(GetForwardVector(transform), UP));
       }
   
       inline Vector3f GetUpVector(const CTransform& transform)
       {
           return LNormalize(LCross(GetRightVector(transform), GetForwardVector(transform)));
       }
   }
